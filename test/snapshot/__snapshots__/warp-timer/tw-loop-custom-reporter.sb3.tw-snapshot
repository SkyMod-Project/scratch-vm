// TW Snapshot
// Input SHA-256: 360d8b29e0e690dda9e91faed6881057d1f38d98258ed8e11c75bdd30536b560

// Sprite1 script
(function factoryXYZ(thread) { const target = thread.target; const runtime = target.runtime; const stage = runtime.getTargetForStage();
const b0 = runtime.getOpcodeFunction("looks_say");
const b1 = stage.variables["`jEk@4|i[#Fk?(8x)AV.-my variable"];
return function* genXYZ () {
yield* executeInCompatibilityLayer({"MESSAGE":"plan 1",}, b0, false, false, null, null);
b1.value = 0;
for (var a0 = (+thread.procedures["Zblock name"]() || 0); a0 >= 0.5; a0--) {
b1.value = ((+b1.value || 0) + 1);
yield;
}
if (((+b1.value || 0) === 4)) {
yield* executeInCompatibilityLayer({"MESSAGE":"pass",}, b0, false, false, null, null);
}
yield* executeInCompatibilityLayer({"MESSAGE":"end",}, b0, false, false, null, null);
retire(); return;
}; })

// Sprite1 block name
(function factoryXYZ(thread) { const target = thread.target; const runtime = target.runtime; const stage = runtime.getTargetForStage();
return function funXYZ_block_name () {
return 4;
return "";
}; })
